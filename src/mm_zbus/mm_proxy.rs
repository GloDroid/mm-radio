//! # DBus interface proxy for: `org.freedesktop.ModemManager1`
//!
//! This code was generated by `zbus-xmlgen` `3.1.0` from DBus introspection data.
//! Source: `org.freedesktop.ModemManager1.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus.pages.freedesktop.org/zbus/client.html)
//! section of the zbus documentation.
//!

use zbus::dbus_proxy;

#[dbus_proxy(
    default_path = "/org/freedesktop/ModemManager1",
    interface = "org.freedesktop.ModemManager1",
    assume_defaults = true,
    gen_blocking = false
)]
trait ModemManager1 {
    /// InhibitDevice method
    fn inhibit_device(&self, uid: &str, inhibit: bool) -> zbus::Result<()>;

    /// ReportKernelEvent method
    fn report_kernel_event(
        &self,
        properties: std::collections::HashMap<&str, zbus::zvariant::Value<'_>>,
    ) -> zbus::Result<()>;

    /// ScanDevices method
    fn scan_devices(&self) -> zbus::Result<()>;

    /// SetLogging method
    fn set_logging(&self, level: &str) -> zbus::Result<()>;

    /// Version property
    #[dbus_proxy(property)]
    fn version(&self) -> zbus::Result<String>;
}
